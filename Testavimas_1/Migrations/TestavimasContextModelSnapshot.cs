// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Testavimas_1.Data;

namespace Testavimas_1.Migrations
{
    [DbContext(typeof(TestavimasContext))]
    partial class TestavimasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Testavimas_1.Models.Darbuotojas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Miestas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vardas")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Darbuotojai");
                });

            modelBuilder.Entity("Testavimas_1.Models.Skambutis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Atsiliepta")
                        .HasColumnType("bit");

                    b.Property<int>("DarbuotojasId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Laikas")
                        .HasColumnType("datetime2");

                    b.Property<int>("Trukme")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DarbuotojasId");

                    b.ToTable("Skambuciai");
                });

            modelBuilder.Entity("Testavimas_1.Models.Skambutis", b =>
                {
                    b.HasOne("Testavimas_1.Models.Darbuotojas", "Darbuotojas")
                        .WithMany()
                        .HasForeignKey("DarbuotojasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Darbuotojas");
                });
#pragma warning restore 612, 618
        }
    }
}
